generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id            String         @id @default(uuid())
  AdAccountId   String         @unique
  AdAccountName String
  category      ClientCategory?
  createdAt     DateTime       @default(now())
  campaigns     Campaign[]
  metrics       clientLevelMetric[]
}

enum ClientCategory {
  ECOMMERCE
  LEADS
}

model Campaign {
  id           String                @id @default(uuid())
  clientId     String
  campaignId   String                @unique
  campaignName String
  createdAt    DateTime              @default(now())
  adSets       AdSet[]
  client       Client                @relation(fields: [clientId], references: [id])
  metrics      campaignLevelMetric[]
}

model AdSet {
  id         String             @id @default(uuid())
  campaignId String
  adSetId    String             @unique
  adSetName  String
  createdAt  DateTime           @default(now())
  ads        Ad[]
  campaign   Campaign           @relation(fields: [campaignId], references: [id])
  metrics    adSetLevelMetric[]
}

model Ad {
  id        String          @id @default(uuid())
  adSetId   String
  adId      String          @unique
  adName    String
  createdAt DateTime        @default(now())
  adSet     AdSet           @relation(fields: [adSetId], references: [id])
  metrics   adLevelMetric[]
}

model clientLevelMetric {
  id             String  @id @default(uuid())
  clientId       String
  createdAt      DateTime @default(now())
  week           Int
  bb             Decimal
  cpm            Decimal
  ctra           Decimal
  ctrl           Decimal
  catc           Decimal
  cgb            Decimal
  cpa            Decimal
  roas           Decimal
  aov            Decimal
  leads          Int
  cpl            Decimal
  client         Client  @relation(fields: [clientId], references: [id])
  
  summaries ClientSummary[]

  @@unique([clientId, createdAt])
}

model campaignLevelMetric {
  id             String   @id @default(uuid())
  campaignId     String
  createdAt      DateTime @default(now())
  week           Int
  aov            Decimal
  cpm            Decimal
  impressions    Int
  learning_phase Boolean
  mer            Decimal
  revenue        Decimal
  roas           Decimal
  spend          Decimal
  campaign       Campaign @relation(fields: [campaignId], references: [id])

  summaries CampaignSummary[]

  @@unique([campaignId, createdAt])
}

model adSetLevelMetric {
  id            String   @id @default(uuid())
  adSetId       String
  createdAt     DateTime @default(now())
  week          Int
  atc           Int
  atcValue      Decimal
  cpa           Decimal
  cpatc         Decimal
  cpc           Decimal
  cpic          Decimal
  ctrAll        Float
  ctrLink       Float
  frequency     Float
  ic            Int
  icValue       Decimal
  impressions   Int
  linkClicks    Int
  lpv           Int
  lpvRate       Float
  purchaseValue Decimal
  purchases     Int
  reach         Int
  roas          Decimal
  adSet         AdSet    @relation(fields: [adSetId], references: [id])

  summaries AdSetSummary[]

  @@unique([adSetId, createdAt])
}

model adLevelMetric {
  id               String   @id @default(uuid())
  adId             String
  createdAt        DateTime @default(now())
  week             Int
  atc              Int
  ctrAll           Float
  ctrLink          Float
  fatigueFlag      Boolean
  ic               Int
  impressions      Int
  lpvRate          Float
  purchases        Int
  thumb_stop_ratio Float
  ad               Ad       @relation(fields: [adId], references: [id])

  summaries AdSummary[]

  @@unique([adId, createdAt])
}

enum SummaryStatus {
  pending
  in_progress
  completed
  failed
}

model ClientSummary {
  id         String      @id @default(uuid())
  clientId   String
  createdAt  DateTime
  summary    String?
  status     SummaryStatus  @default(pending)
  retryCount Int            @default(0)
  lastAttempt DateTime      @default(now())

  clientMetric clientLevelMetric @relation(fields: [clientId, createdAt], references: [clientId, createdAt])
  
  @@unique([clientId, createdAt])
}

model CampaignSummary {
  id          String        @id @default(uuid())
  campaignId  String
  createdAt   DateTime
  summary     String?
  status      SummaryStatus @default(pending)
  retryCount  Int           @default(0)
  lastAttempt DateTime      @default(now())

  campaignMetric campaignLevelMetric @relation(fields: [campaignId, createdAt], references: [campaignId, createdAt])

  @@unique([campaignId, createdAt])
}

model AdSetSummary {
  id          String        @id @default(uuid())
  adSetId     String
  createdAt   DateTime
  summary     String?
  status      SummaryStatus @default(pending)
  retryCount  Int           @default(0)
  lastAttempt DateTime      @default(now())

  adSetMetric adSetLevelMetric @relation(fields: [adSetId, createdAt], references: [adSetId, createdAt])

  @@unique([adSetId, createdAt])
}

model AdSummary {
  id          String        @id @default(uuid())
  adId        String
  createdAt   DateTime
  summary     String?
  status      SummaryStatus @default(pending)
  retryCount  Int           @default(0)
  lastAttempt DateTime      @default(now())

  adMetric adLevelMetric @relation(fields: [adId, createdAt], references: [adId, createdAt])

  @@unique([adId, createdAt])
}
